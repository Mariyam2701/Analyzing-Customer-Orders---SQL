/* SQL PROJECT: ANALYZING CUSTOMER ORDERS*/ 
show databases;

##CREATE DATABASE customer_orders
create database customer_orders;


/*CREATE TABLE CUSTOMERS*/
CREATE TABLE customers(
	customer_id int primary key,
	name varchar(50),
	email varchar(100),
	address varchar(200)
);

/*CREATE TABLE ORDER*/
create table orders(
	order_id int primary key,
	customer_id int,
	order_date date,
	total_amount DECIMAL(10, 2),
	foreign key (customer_id) references customers(customer_id)
);

/*CREATE TABLE ORDER ITEM*/
create table order_items(
	order_items_id int primary key,
	order_id int,
	product_name varchar(30),
	quantity int,
	price DECIMAL(10, 2),
	foreign key (order_id) references orders(order_id)
);

/*insert data in customers table*/
insert into customers (customer_id,name,email,address) values
(1, 'Alice Smith', 'alice.smith1@example.com', '123 Maple St'),
(2, 'Bob Johnson', 'bob.johnson2@example.com', '456 Oak St'),
(3, 'Carol White', 'carol.white3@example.com', '789 Pine St'),
(4, 'David Brown', 'david.brown4@example.com', '321 Birch St'),
(5, 'Eva Green', 'eva.green5@example.com', '654 Cedar St'),
(6, 'Frank Black', 'frank.black6@example.com', '111 Elm St'),
(7, 'Grace Blue', 'grace.blue7@example.com', '222 Ash St'),
(8, 'Harry Red', 'harry.red8@example.com', '333 Willow St'),
(9, 'Ivy Purple', 'ivy.purple9@example.com', '444 Fir St'),
(10, 'Jack Orange', 'jack.orange10@example.com', '555 Spruce St');

/*insert data in orders table*/
INSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES
(1, 1, '2024-06-01', 150.00),
(2, 2, '2024-06-03', 200.00),
(3, 1, '2024-06-05', 300.00),
(4, 3, '2024-06-10', 450.00),
(5, 4, '2024-06-12', 500.00),
(6, 5, '2024-06-15', 1000.00),
(7, 6, '2024-06-16', 250.00),
(8, 7, '2024-06-17', 175.00),
(9, 8, '2024-06-18', 600.00),
(10, 9, '2024-06-19', 850.00),
(11, 10, '2024-06-20', 900.00),
(12, 1, '2024-06-21', 320.00),
(13, 2, '2024-06-22', 280.00),
(14, 3, '2024-06-23', 330.00),
(15, 4, '2024-06-24', 150.00),
(16, 5, '2024-06-25', 180.00),
(17, 6, '2024-06-26', 400.00),
(18, 7, '2024-06-27', 220.00),
(19, 8, '2024-06-28', 340.00),
(20, 9, '2024-06-29', 290.00),
(21, 10, '2024-06-30', 150.00),
(22, 1, '2024-07-01', 500.00),
(23, 2, '2024-07-02', 600.00),
(24, 3, '2024-07-03', 700.00),
(25, 4, '2024-07-04', 200.00),
(26, 5, '2024-07-05', 300.00),
(27, 6, '2024-07-06', 400.00),
(28, 7, '2024-07-07', 500.00),
(29, 8, '2024-07-08', 600.00),
(30, 9, '2024-07-09', 700.00),
(31, 10, '2024-07-10', 800.00),
(32, 1, '2024-07-11', 900.00),
(33, 2, '2024-07-12', 1000.00),
(34, 3, '2024-07-13', 1100.00),
(35, 4, '2024-07-14', 1200.00),
(36, 5, '2024-07-15', 1300.00),
(37, 6, '2024-07-16', 1400.00),
(38, 7, '2024-07-17', 1500.00),
(39, 8, '2024-07-18', 1600.00),
(40, 9, '2024-07-19', 1700.00),
(41, 10, '2024-07-20', 1800.00),
(42, 1, '2024-07-21', 1900.00),
(43, 2, '2024-07-22', 2000.00),
(44, 3, '2024-07-23', 2100.00),
(45, 4, '2024-07-24', 2200.00),
(46, 5, '2024-07-25', 2300.00),
(47, 6, '2024-07-26', 2400.00),
(48, 7, '2024-07-27', 2500.00),
(49, 8, '2024-07-28', 2600.00),
(50, 9, '2024-07-29', 2700.00);

/*insert data in order_items table*/
INSERT INTO order_items (order_items_id, order_id, product_name, quantity, price) VALUES
(1, 1, 'Widget A', 1, 50.00),
(2, 1, 'Widget B', 2, 50.00),
(3, 2, 'Widget A', 2, 50.00),
(4, 2, 'Widget C', 3, 50.00),
(5, 3, 'Widget B', 2, 75.00),
(6, 3, 'Widget D', 2, 75.00),
(7, 4, 'Widget E', 5, 90.00),
(8, 5, 'Widget F', 4, 125.00),
(9, 6, 'Widget G', 8, 125.00),
(10, 7, 'Widget A', 2, 125.00),
(11, 8, 'Widget B', 3, 60.00),
(12, 9, 'Widget C', 2, 90.00),
(13, 10, 'Widget D', 4, 85.00),
(14, 11, 'Widget E', 5, 100.00),
(15, 12, 'Widget F', 6, 70.00),
(16, 13, 'Widget G', 2, 125.00),
(17, 14, 'Widget A', 1, 50.00),
(18, 15, 'Widget B', 3, 50.00),
(19, 16, 'Widget C', 2, 75.00),
(20, 17, 'Widget D', 2, 75.00),
(21, 18, 'Widget E', 5, 90.00),
(22, 19, 'Widget F', 4, 125.00),
(23, 20, 'Widget G', 8, 125.00),
(24, 21, 'Widget A', 2, 125.00),
(25, 22, 'Widget B', 3, 60.00),
(26, 23, 'Widget C', 2, 90.00),
(27, 24, 'Widget D', 4, 85.00),
(28, 25, 'Widget E', 5, 100.00),
(29, 26, 'Widget F', 6, 70.00),
(30, 27, 'Widget G', 2, 125.00),
(31, 28, 'Widget A', 1, 50.00),
(32, 29, 'Widget B', 3, 50.00),
(33, 30, 'Widget C', 2, 75.00),
(34, 31, 'Widget D', 2, 75.00),
(35, 32, 'Widget E', 5, 90.00),
(36, 33, 'Widget F', 4, 125.00),
(37, 34, 'Widget G', 8, 125.00),
(38, 35, 'Widget A', 2, 125.00),
(39, 36, 'Widget B', 3, 60.00),
(40, 37, 'Widget C', 2, 90.00),
(41, 38, 'Widget D', 4, 85.00),
(42, 39, 'Widget E', 5, 100.00),
(43, 40, 'Widget F', 6, 70.00),
(44, 41, 'Widget G', 2, 125.00),
(45, 42, 'Widget A', 1, 50.00),
(46, 43, 'Widget B', 3, 50.00),
(47, 44, 'Widget C', 2, 75.00),
(48, 45, 'Widget D', 2, 75.00),
(49, 46, 'Widget E', 5, 90.00),
(50, 47, 'Widget F', 4, 125.00);

/*perform the queries*/

---checking the tables:
select * from customers;
select * from orders;
select * from order_items;

---the total number of customers:
SELECT COUNT(customer_id) FROM customers;

---Retrieve all orders placed by a specific customer:
select * from orders where customer_id = 4;

---Retrieve all order items for a specific order:
select order_items.* from order_items 
inner join orders 
on order_items.order_id = orders.order_id
where orders.order_id = 24;

---Retrieve the customer details for a specific order:
select customers.* from customers
inner join orders
on customers.customer_id = orders.customer_id
where orders.order_id = 45;

---Retrieve all customers who have placed an order greater than $1000:
select customers.* from customers
inner join orders
on customers.customer_id = orders.customer_id
where orders.total_amount > 1000;

---Retrieve the total amount spent by each customer:
select customers.name, sum(orders.total_amount) as total_amount_spent 
from customers
inner join orders
on customers.customer_id = orders.customer_id
group by customers.customer_id, customers.name;

---Retrieve all products and their total quantity sold:
select product_name, sum(quantity) as total_quantity_sold
from order_items
group by product_name
order by total_quantity_sold desc;

---Retrieve all orders with a total amount greater than $1000:
select orders.* from orders
where total_amount > 1000;

---Retrieve the average order value and round it till 2 decimal:
select round(avg(total_amount),2) as average_price from orders;

---Retrieve the customer who placed the most orders:
select customers.name, count(orders.order_id) as number_of_orders
from customers
inner join orders
on customers.customer_id = orders.customer_id
group by customers.customer_id, customers.name
order by number_of_orders desc
limit 1;

---Create a view that shows the customer name, order date, and total amount for each order:
create view customer_order_view as
select customers.name, orders.order_date, orders.total_amount
from customers
inner join orders on customers.customer_id = orders.customer_id;

---Insert a new customer and their corresponding order:
insert into customers (customer_id, name, email, address) values (11,'Kim Johnny','kim.johnny@example.com','342 Donny st');
INSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (51, 11, '2024-08-01', 150.00);
INSERT INTO order_items (order_items_id, order_id, product_name, quantity, price) VALUES (51, 51, 'Widget A', 1, 50.00);






